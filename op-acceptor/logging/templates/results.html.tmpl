<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test Results</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        h1, h2, h3 {
            margin-top: 20px;
            margin-bottom: 10px;
        }
        .summary {
            background-color: #f8f8f8;
            border-radius: 5px;
            padding: 15px;
            margin-bottom: 20px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
        .stats {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            margin: 15px 0;
        }
        .stat-box {
            padding: 10px 15px;
            border-radius: 4px;
            box-shadow: 0 1px 2px rgba(0,0,0,0.1);
            min-width: 80px;
            text-align: center;
        }
        .stat-value {
            font-size: 24px;
            font-weight: bold;
        }
        .pass { background-color: #dff0d8; color: #3c763d; }
        .fail { background-color: #f2dede; color: #a94442; }
        .skip { background-color: #fcf8e3; color: #8a6d3b; }
        .error { background-color: #f2dede; color: #a94442; }
        .test-list {
            border-collapse: collapse;
            width: 100%;
            margin-top: 20px;
        }
        .test-list th, .test-list td {
            border: 1px solid #ddd;
            padding: 8px 12px;
            text-align: left;
        }
        .test-list th {
            background-color: #f2f2f2;
            position: sticky;
            top: 0;
        }
        .test-list tr:nth-child(even) {
            background-color: #f9f9f9;
        }
        .test-list tr:hover {
            background-color: #f1f1f1;
        }
        .status-cell {
            text-align: center;
        }
        .actions {
            display: flex;
            gap: 10px;
            margin: 20px 0;
        }
        button {
            padding: 8px 12px;
            border: none;
            border-radius: 4px;
            background-color: #f0f0f0;
            cursor: pointer;
        }
        button:hover {
            background-color: #e0e0e0;
        }
        .search {
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            width: 250px;
        }
        .hidden {
            display: none;
        }
        a {
            color: #337ab7;
            text-decoration: none;
        }
        a:hover {
            text-decoration: underline;
        }
        .duration {
            text-align: right;
        }
    </style>
</head>
<body>
    <h1>Test Results</h1>
    <div class="summary">
        <p><strong>Run ID:</strong> {{.RunID}}</p>
        <p><strong>Time:</strong> {{.Time}}</p>
        <p><strong>Duration:</strong> {{.TotalDuration}}</p>
        
        <div class="stats">
            <div class="stat-box">
                <div>Total</div>
                <div class="stat-value">{{.Total}}</div>
            </div>
            <div class="stat-box pass">
                <div>Passed</div>
                <div class="stat-value">{{.Passed}}</div>
            </div>
            <div class="stat-box fail">
                <div>Failed</div>
                <div class="stat-value">{{.Failed}}</div>
            </div>
            <div class="stat-box skip">
                <div>Skipped</div>
                <div class="stat-value">{{.Skipped}}</div>
            </div>
            <div class="stat-box error">
                <div>Errors</div>
                <div class="stat-value">{{.Errored}}</div>
            </div>
            <div class="stat-box" style="min-width: 120px;">
                <div>Pass Rate</div>
                <div class="stat-value">{{.PassRateFormatted}}%</div>
            </div>
        </div>
    </div>
    
    <div class="actions">
        <input type="text" id="searchInput" class="search" placeholder="Search tests, packages, gates..." oninput="filterTests()">
        <button onclick="showOnlyFailed()">Show Failed Only</button>
        <button onclick="showAll()">Show All</button>
    </div>
    
    <table class="test-list" id="testTable">
        <thead>
            <tr>
                <th>Status</th>
                <th>Test</th>
                <th>Package</th>
                <th>Gate</th>
                <th>Suite</th>
                <th>Duration</th>
                <th>Log</th>
            </tr>
        </thead>
        <tbody>
            {{range .Tests}}
            <tr class="{{.StatusClass}}">
                <td class="status-cell {{.StatusClass}}">{{.StatusText}}</td>
                <td>{{.TestName}}</td>
                <td>{{.Package}}</td>
                <td>{{.Gate}}</td>
                <td>{{.Suite}}</td>
                <td class="duration">{{.DurationFormatted}}</td>
                <td><a href="{{.LogPath}}" target="_blank">View Log</a></td>
            </tr>
            {{end}}
        </tbody>
    </table>

    <script>
        function filterTests() {
            const query = document.getElementById('searchInput').value.toLowerCase();
            const rows = document.querySelectorAll('#testTable tbody tr');
            
            for (const row of rows) {
                const text = row.textContent.toLowerCase();
                if (text.includes(query)) {
                    row.classList.remove('hidden');
                } else {
                    row.classList.add('hidden');
                }
            }
        }
        
        function showOnlyFailed() {
            document.getElementById('searchInput').value = '';
            const rows = document.querySelectorAll('#testTable tbody tr');
            
            for (const row of rows) {
                if (row.classList.contains('fail') || row.classList.contains('error')) {
                    row.classList.remove('hidden');
                } else {
                    row.classList.add('hidden');
                }
            }
        }
        
        function showAll() {
            document.getElementById('searchInput').value = '';
            const rows = document.querySelectorAll('#testTable tbody tr');
            
            for (const row of rows) {
                row.classList.remove('hidden');
            }
        }
        
        // If there are failures, show only failed tests by default
        // window.onload = function() {
        //     if ({{.HasFailures}}) {
        //         showOnlyFailed();
        //     }
        // };
    </script>
</body>
</html> 